local replicatedStorage = game:GetService("ReplicatedStorage")
local collectionService = game:GetService("CollectionService")
local players = game:GetService("Players")

local hatchFunction = getupvalue(getupvalue(getconnections(replicatedStorage.GameEvents.PetEggService.OnClientEvent)[1].Function, 1), 2)
local eggModels = getupvalue(hatchFunction, 1)
local eggPets = getupvalue(hatchFunction, 2)

local espCache = {}
local activeEggs = {}

local function getObjectFromId(objectId)
    for eggModel in eggModels do
        if eggModel:GetAttribute("OBJECT_UUID") ~= objectId then continue end
        return eggModel
    end
end

local function FormatAllAttributes(object)
    local attrs = object:GetAttributes()
    local parts = {}
    for key, val in pairs(attrs) do
        table.insert(parts, key .. ": " .. tostring(val))
    end
    return table.concat(parts, "\n")
end

local function CreateEspGui(object, petName)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "FullInfoESP"
    billboard.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
    billboard.Size = UDim2.new(10, 0, 10, 0)
    billboard.StudsOffset = Vector3.new(0, 4, 0)
    billboard.AlwaysOnTop = true
    billboard.ClipsDescendants = false
    billboard.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local label = Instance.new("TextLabel")
    label.Parent = billboard
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 0.6
    label.BackgroundColor3 = Color3.new(0, 0, 0)
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0
    label.TextWrapped = true
    label.Font = Enum.Font.Code
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextYAlignment = Enum.TextYAlignment.Top
    label.RichText = false

    local attrText = FormatAllAttributes(object)
    label.Text = ("Pet to Hatch: %s\n%s"):format(petName or "?", attrText)

    billboard.Parent = object
    return billboard
end

local function UpdateEsp(objectId, petName)
    local object = getObjectFromId(objectId)
    if not object or not espCache[objectId] then return end

    local labelGui = espCache[objectId]
    if labelGui and labelGui:FindFirstChildOfClass("TextLabel") then
        local attrText = FormatAllAttributes(object)
        labelGui.TextLabel.Text = ("Pet to Hatch: %s\n%s"):format(petName or eggPets[objectId] or "?", attrText)
    end
end

local function AddEsp(object)
    local objectId = object:GetAttribute("OBJECT_UUID")
    if not objectId then return end

    local petName = eggPets[objectId]
    local esp = CreateEspGui(object, petName)
    espCache[objectId] = esp
    activeEggs[objectId] = object
end

local function RemoveEsp(object)
    local objectId = object:GetAttribute("OBJECT_UUID")
    if espCache[objectId] then
        espCache[objectId]:Destroy()
        espCache[objectId] = nil
    end
    activeEggs[objectId] = nil
end

for _, object in collectionService:GetTagged("PetEggServer") do
    task.spawn(AddEsp, object)
end

collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(AddEsp)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(RemoveEsp)

local old
old = hookfunction(getconnections(replicatedStorage.GameEvents.EggReadyToHatch_RE.OnClientEvent)[1].Function, newcclosure(function(objectId, petName)
    eggPets[objectId] = petName
    UpdateEsp(objectId, petName)
    return old(objectId, petName)
end))
